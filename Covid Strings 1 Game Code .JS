doc.type.html
html. lang.en
script
header=document create.element(header)
header.style.backgroundcolor=#4caf50
header.style.color=’white’
header.style.padding=’10px’
header.style.textalign=’center’
header.style.text.fontsize=’24px’
header.textcontent=’welcome to covid strings1’
document appendchild(header)
<header.html>
heading variables 
the heading numbers that determine where each heading and subheading go 
heading1=game code overview
heading2=background functions
heading3=game code part1
heading4=phrases
heading5=math problems
heading6=sentences
heading7=multiple choice questions
heading8=game code part2 
heading9=answer checker
heading10=winner checker
subheading1=polling problems
subheading2= answer scanner
document.createelement(img) 
imagesrc =www.google.com/intl/en_com/images/logo_plain.png;
src = document.getelementbyid(covid virus)
getelementbyid
appendchild
getelementbyid
filename=covid strings1.js
<header.html>
game code overview
an outline of the game code for covid strings1
java.awt graphics
audio = new audio
audio.play();
button random button
new button (set random color)
option button
new button (change color)
public fun with graphics()
color panel
add (panel,center )
add(button);
button add actionlistener(action listener)
override 
setbackground(new color)
panel add(optionbutton);
add actionlistener(action listener)
override 
public actionperformed(actionevent e)
random r=newrandom();
<header.html>
background functions
the functions that lead into the background that are the first things the user will experience
colorpanel.setbackground(new color (r nextint(thirteen),)(r nextint(thirteen),)(r nextint(thirteen),)(r nextint(thirteen),)(r nextint(thirteen),)(r nextint(thirteen),)(r nextint(thirteen),)(r nextint(thirteen)))
(r nextint(thirteen,))(r nextint(thirteen,))(r nextint(thirteen)),(r nextint(thirteen)))
buttonpanel.add(optionbutton);
optionbutton.add actionlistener(new action listener)
override 
public actionperformed(actionevent e)
color multi=jcolorchooser.showdialog(funwithgraphics.this)
if(multi!=null)
color panel set.background(multi)
this.add(buttonpanel,borderlayout.south)
public static main(string [] args)
jframe f = new covid strings1()
f.set title(covid strings1)
f.set default closeoperation(exit_on_close);
F.setsize
f.set visible(true);
<label id=lblscore>zero</label>
src.appendchild(img)
score=zero
if (mult == x*y)
[non-concatenated]
score+=ten
else:
score-=ten
if (mult == x*y)
[concatenated]
score+=twenty
else:
score-=twenty
lblscore=document.getelementbyid(lblscore)
lbl.score.innerhtml=score
value object=[team color]
<header.html>
game code part1 
part1 of game code for covid strings1(value object[team-color]-desired color green)
covidstrings1teamlist=[red protein spikers,orange rna messengers ,yellow moxie ,green peacemakers,burgundy rebuilders ,indigo isos,blue curve crushers,black night riders]
num teams
total players players per team
if players per team=0
return zero
return math floor total players/players per team
teamsgrouping=(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)(rnextint8)
string manager{non-concatenated}
insert string(entity,string)
entity.element.text=string
string manager insert string
string manager{concatenated}
insert string (entity,string)
entity.element.text=string
string manager insert string
string=””
for string in covid strings1 phrase list1 
select characters
edit diffuse property
desired color=green
for string in covid strings1 math problems list 
select characters
edit diffuse property
desired color=green
for string in covid strings sentence list1 
select characters
edit diffuse property
desired color=green
<header.html>
phrases
phrases that involve both non-concatenated and concatenated strings 
phraselist=[non -concatenated "hello covid world","dont" "eat" "bleach","could" "you" "please" "get" "vaccinated","good bye covid world","dont overcrowd hospital capacity","are we going back to 1918,there have been 100,000 reported deaths so far,the covid tracker shows] 
concatenated ["you"+"should"+"get"+"tested","pfizer"+"is"+"95%"+"effective","you"+"should"+"not"+"forget"+"your"+"flu"+"shot","snl"+"nailed"+"a"+"rona"+"christmas"+"there"+"have"+"been"+"some"+"negative"+"effects","some"+"of"+"these"+"include"+"suicide","the"+"best"+"thing"+"to"+"do"+"is"+"practice"+"continuity"+"safely","in"+"short"+"you"+"should"+"not"+"change"+"your"+"behavoir"+"much"] 
<header.html>
math problems
covid related math problems that will appear in covid strings1
math problems list=[ non-concatenated "if a covid value c equals 3 is added to the double of the value its equal to what do you get?", a covid value represented by a variable c is quadrupled and then added by f what is the resulting product?, if the cdcs covid tracker has 50,000 cases 35,000 cases were reported last week how many cases happened?" "the cov19 emergency alert system was installed on march 12 2020 after 2 weeks there were 1975 calls if the rate of calls was 5 per hour how many calls happened after the 1st week?", "town a1s annual thanksgiving parade happens on november 19 a1s public health guidelines require that events of more than 20,000 people be held only if the positivity rate is <=5%  the current positivity rate is 6 1/3% and the parade is next week could it be held? if a decision could be made no later than the 16th and the amount of precautions taken include 10 cartons of 100 masks and 6ft of distancing can the parade still happen?"]
[concatenated "a"+"knock"+"off"+"vaccine"+"company"+"promises"+"to"+"deliver"+"a"+"vaccine"+"within"+"2"+"weeks"+"if"+"the"+"standard"+"timeline"+"is"+"4"+"weeks"+"how"+"much"+"damage"+"can"+"happen"?
"if"+"a"+"poll"+"on"+"this"+"question"+"showed"+"that"+"92"+"percent"+"of"+"republicans"+"thought"+"that"+"he"+"was"+"joking"+"when"+"it"+"came"+"to"+"bleach"+"how"+"many"+"of"+"those"+"people"+"risked"+"illness?","if"+"875"+"people"+"were"+"reported"+"to"+"a"+"covid"+"hotline"+"because"+"they"+"thought"+"injecting"+"bleach"+"cured"+"covid"+"and"+"89%"+"of"+"them"+"said"+"they"+"believed"+
"trump"+"how"+"many"+"people"+"out"+"of"+"the"+"total"+"believed"+"trump"?
"if"+"the"+"margin"+"of"+"error"+"is"+"fifty" +"and"+"five"+"hundreths"+"percent"+"what"+"is"+"the"+"range?","a"+"news"+"report"+"suggested"+"that"+"the"+"level2"+"emergency"+"will"+"continue"+"for"+"another"+"week"+"if"+"the"+"rate"+"is"+">3%" 
"if"+"it"+"is"+"currently"+"2.25%"+"would"+"it"+"continue"?,"if"+"4"+"people"+"took"+"an"+"unknown"+"number"+"of"+"shots"+"from"+"pfizers"+"vaccine"+"at"+"3:45pm" +"on"+"october"+"7th"+"when"+"would"+"it"+"expire?"]
public static main(string []args)
int number
number=number*2
system.out print in (“the number is“+number)
<subheading.html>
polling problems
math problems that involve the use of polls
polling function(exact,number)
console log (exact:${exact}, number:${number},
if polling function log== (exact,number)
return true
else:
return false
if polling function log==(number,exact)
return false
else:
return true  
for math problems in covid strings math problem list 
if math problem==polling percent :
subtract exact from 100
else:
remain 
if math problem==margin of error:
add and subtract exact number 
else:
remain 
<header.html>
sentences
covid related sentences that will appear in covid strings1 
sentence list=["pfizer has a 95% effective vaccine","the"+"most"+"obvious"+"similarity"+"between"+"covid"+"and"+"the"+"spanish"+"flu"+"is"+"that"+"they"+"were"+"global"+"pandemics","any"+"covid"+"tracker"+"is"+"a"+"representation"+"of"+"data"+"at"+"a"+"specific"+"place"+"and"+"time"]
<header.html>
multiple choice questions
multiple choice questions and answers that will appear in covid strings1 
multiple choice list=[1: a hydrogen peroxide,  b, ammonium nitrate, c bleach , d green eggs and ham 2: a rona, b green, c krona, d white 3: a tested, b a piercing, c a ti-82 graphing calculator, d a mcdonalds happy meal 4 : a bienvenu, b hello, c nihau, d hola 
5: a 55, b 95, c 88, d 66, 6 : a oversaturate, b overcrowd, c synthesize, d crowd-surf 7 : a flu, b meningits, c dogs rabies, d archery 8 : a tracker, b map, c graph positioning system, d lockdown 
9: a effects, b things, c results, d impacts 10: a snow throwing, b vaccinated, c off qanon, d snowballing 11: a 1918, b 1919, c -2045, d -1985 12: a 100,000 b a google, c a bevy, d a number zero sig figs 
13: a negative b netural c firework-like d wanting 14: a changes, b continuity, c sameness, d parity,  15 :a behavoir, b outlook, c stress-level, d mindset, 16: a serum b vaccine c version mountain dew d gatorade knockoff,
17: a major b only c most obvious d glaring, 18: a hey-ey-ey goodybe, b sayornara, c good night, d goodbye, 19: a poll b prediction c doom scroll d tracker]
<header.html>
game code part2
the rest of the game code excluding answer and winner checker
userin.select team 
import meta.
select class
(non-concatenated)
if question==math problem:
prompt
log 
else:
select from mutliple choice
if question==multiple choice:
select from multiple choice
else:
prompt
log
myclass=newmyclass(concatenated) 
return category
if question==math problem:
prompt
log
if question== multiple choice:
select from multiple choice
else:
prompt
log
import syntax 
substring(start,end)
<header.html>
answer checker
the feature within covid strings that allows the software to check whether a users answer is correct
for multiple choice questions in covid strings 
userin.multiple choice
if select answer ==correct answer
log true
else
log false 
if selectedanswer=not correct:
return false
else:
return true
for math problems in covid strings
if typed answer ==correct
return true
else:
return false
if typed answer== not correct
return false
else
return true
public static main(string [] args)
int number
number=number*2
system.out print in (“the number is“+number)
<subheading.html>
answer scanner
the feature within the covid strings answer checker that allows for confirmation of the user answer  
answer checker
scanner=new scanner(system.in)
string correct answer
string useranswer=scanner.nextline()
if useranswer.equals(correctanswer)
system.out.print.in(correct)
else:
system.out.printin(incorrect)
scanner.close
<header.html>
winner checker
the feature within covid strings that allows for the player to know if their team won 
check winner:
if winner==true:
log(the winner is)
if winner==false:
log(no winner yet) 
if users team wins covid strings1
console.log (users team wins covid strings 1)
else
return game over
return filename
