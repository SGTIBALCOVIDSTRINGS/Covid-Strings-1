doc type html
html lang en 
script
header=document create.element(header)
header.style.background color=#4caf50
header.style.color=’white’
header.style.padding=’10px’
header.style.textalign=’center’
header.style.text.fontsize=’24px’
header.textcontent=’welcome to covid strings1 first round’
document appendchild(header)
<header.html>
heading variables 
the heading numbers that determine where each heading and subheading go 
heading1=first round overview
heading2=matchups
heading3=first round questions
heading4=advancing rounds
subheading1=team stealing
subheading2=result for matchup1
subheading3=result for matchup2
subheading4=result for matchup3
subheading5=result for matchup4
<header.html>
first round overview
an overview of the first round of covid strings1 includes seeding 
html
head
utf8
viewport content=width=device-width, inital scale one 
title covid strings version1 first round bracket
div id bracket class bracket div
script src bracket .js
link rel= stylesheet href= css
head
body
bracket-container
matchup{}
solid zero;
filename=covid strings1 first round.js
first round=(highest overall seed ,second high seed third highseed, first middle seed, second middle seed, thirdlow seed ,second low seed,lowest overall seed)
highest overall seed =seed1
second highest seed=seed2
third highest seed=seed3
firstmiddleseed=seed4
second middle seed = seed5
third lowest seed= seed6
second lowest seed = seed7
lowest overall seed = seed8
<header.html>
matchups 
for first round there are 8 teams which equals 4 matchups 
matchup1=(yellow versus indigo)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerhtml=<div>${team1}</div><div>${team2}</div>;
return matchup;
matchup2=(burgundy versus green)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerhtml=<div>${team1}</div><div>${team2}</div>;
return matchup;
matchup3=(blue versus orange)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerhtml=<div>${team1}</div><div>${team2}</div>;
return matchup;
matchup4=(black versus red)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerhtml=<div>${team1}</div><div>${team2}</div>;
return matchup;
if(event.target.covidstringsseedlist.contains(matchup))
event.target.covidstringsseedlist.toggle
else:
add matchup
bracket.appendchild
for (i in covid strings first round ) 
rounddiv = createelement(div);
rounddiv.classname = covid strings1first round;
rounddiv.appenedchild(matchupdiv)
teams.foreach(team,index)=>{}
<header.html>
first round questions
the questions asked in the first round of the covid strings contest
java util.scanner
java.util
first roundquestions=questions[1-17]
collections.shuffle(arrays.aslist(questions)
question1 
question2
question3
question4 
question5
question6
question7
question8
question9
question10
question11
question12
question13
question14
question15
question16
question17
myclass=(non-concatenated)
return class
if category==math problem:
prompt
log
else:
select from multiple choice
if category == multiplechoice:
select answer
else:
prompt
log
if selected answer==:correct
true
if selected answer==not correct:
false
myclass=new myclass(concatenated) 
return class
if category == multiplechoice:
select answer
else:
prompt
log
if selected answer==correct:
true
if selected answer==not correct:
false
else:
return true
team1=lower ranked seed
team2=the higher seeded opponent
points: 10 points or 20 points
<subheading.html>
team stealing
steal points(stealingteam,victimteam,pointstosteal)
if(victimteam.points>=pointtosteal)
victimteam.points-=pointtosteal;
stealingteampoints+=pointstosteal
console.log(stealingteam.name} stole points from {victim team name}!)
else:
console.log({victimteam.name} doesnt have enough points to steal)
if teams final  answer==incorrect:
opposing team steals
else:
change covid strings matchup score
private string getblanks(int numberofblanks)
char[] chars = new char[numberofblanks]
arrays.fill chars 
return new string chars 
bracket.appendchild(rounddiv)
<header.html>
advancing rounds
contains criteria required for a team to advance to the second round 
advancingteams= slice(current teams);
<subheading.html>
result for matchup1 
the code for how to determine the end result of natchup1 of covid strings 
result= declarewinner(matchup1)
if yellow score >=forty:
console.log(yellow moxie wins)
else:
remain
if team indigo score>=forty:
console.log(indigo isos win)
else:
remain
<subheading.html>
result for matchup2 
the code for how to determine the end result of matchup2 of covid strings 
result= declarewinner(matchup2)
if green score >=forty:
console.log(green peacemakers win)
else:
remain
if burgundy score>=forty:
console.log(burgundy rebuilders win)
else:
remain
<subheading.html>
result for matchup3
the code for how to determine the end result of matchup3 of covid strings 
result= declarewinner(matchup3)
if orange score>=forty:
console.log(orange rna messengers win)
else:
remain
if blue score>=forty:
console.log(blue curve crushers win)
else:
remain
<subheading.html>
result for matchup4 
the code for how to determine the end result of matchup4 of covid strings 
result= declarewinner(matchup4)
if red score>=forty:
console.log(red protein spikers wins)
else:
remain
if black score>=forty:
console.log(black night riders win)
else:
remain
return filename
