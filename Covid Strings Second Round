doc type.html
html. lang.en
script
header=document create.element(header)
header.style.backgroundcolor=#4caf50
header.style.color=’white’
header.style.padding=’10px’
header.style.textalign=’center’
header.style.text.fontsize=’24px’
header.textcontent=’welcome to covid strings1 second round’
document append child(header)
<header.html>
heading variables 
the heading numbers that determine where each heading and subheading go 
heading1=second round overview
heading2=matchups
heading3=second round questions
heading4=advancing rounds
subheading1=team stealing
<header.html>
second round overview
is an overview of the second round of the covid strings contest
head
utf-eight
viewport content=width=device-width, inital scale one 
title covid strings version1 second  round bracket
div id bracket class bracket div
script src bracket .js
link rel= stylesheet href=css
head
body
bracket-container{}
matchup
solid zero;
filename=covid strings1 second round.js
secondround=(highest remaining seed,intermediate seed1,intermediate seed2,lowest remaining seed) 
highest remaining seed =(greatest remaining num value in covid strings list)
lowest remaining seed = (lowest remaining num value in covid strings list)
intermediate seed1=(first middle remaining value in covid strings list)
intermediate seed2=(second middle remaining value in covid strings list)
<header.html>
matchups
contains 4 teams which equals 2 matchups 
matchup1=(intermediate seed2 versus intermediate seed1)
if (event.target.covid strings seed list.contains(matchup))
event.target.covid strings seed list.toggle
else:
add matchup
matchup2=(lowest remaining seed versus highest remaining seed)
if (event.target.covid strings seed list.contains(matchup))
event.target.covid strings seed list.toggle)
else
add matchup
for (i in covid strings seed list)
round div=document.createelement
round div class name= covid strings1 second round
bracket.appendchild(round div)
<header.html>
second round questions
the questions asked in the second round of the covid strings contest
java util.scanner
java.util
second round questions=questions[18-26]
collections.shuffle(arrays.aslist(questions)
question18
new question19
new question20
new question21
new question22
new question23
new question24
new question25
new question26
myclass=(non-concatenated)
if category==math problem:
prompt
log
else:
select from multiple choice
if category == multiplechoice:
select answer
else:
prompt
log
myclass=new myclass(concatenated) 
return category
if category==math problem:
prompt
log
else:
select from multiple choice
if category == multiplechoice:
select answer
else:
prompt
log
import syntax 
team1=lower ranked seed
team2=the higher seeded oppponent
points: 10 points or 20 points
<subheading.html>
team stealing
steal points(stealingteam,victimteam,pointstosteal)
if(victim team.points>=point to steal)
victimteam.points-=pointtosteal;
stealingteampoints+=pointstosteal
console.log([stealingteam.name} stole points from {victim team name}!)
else:
console.log({victimteam.name} doesnt have enough points to steal)
if teams final  answer==incorrect:
opposing team steals
else:
change covid strings matchup  score
<header.html>
advancing rounds 
contains the criteria for teams in the second round to advance to the championship 
advancingteams=slice(current teams)
result = declarewinner(team1score,team2score);
if intermediateseed1score>=fourty:
console.log(intermediate seed1 wins )
else:
console.log(intermediate seed2 wins)
if highest remaining seed score>=fourty:
console.log(highest remaining seed wins)
else:
console.log(lowest remaining seed wins)
return filename
